단계,단계명,작업 내용
0,아이디어 구체화,"서비스 목적 정의, 대상 사용자 분석, 경쟁 서비스 리서치, 차별점 정리"
1,기획서 작성,"기능 목록, 사용자 흐름, 페이지 구성, 핵심 기능 도출 및 문서화"
2,기술 스택 결정,"프론트/백엔드/AI/DB/배포 스택 선정 및 정리 (React, Spring, Oracle, Python 등)"
3,Notion 스프린트 세팅,"스프린트 보드/작업 리스트 작성, 담당자, 마감일, 상태, 우선순위 관리"
4,디렉토리 구조 설계 및 생성,VS Code에서 백엔드/프론트/AI 폴더 구분하여 기본 구조 생성
5,GitHub 초기화 및 브랜치 전략,"git init, remote add, main/develop 브랜치 생성, .gitignore 작성"
6,Figma 와이어프레임,"메인, 로그인, 일정 추천 등 핵심 화면 흐름 설계, 프로토타입 제작"
7,DB 설계 및 ERD 작성,"Oracle 기반 ERD 설계, 테이블 정의, 제약조건 설정, SQL 스크립트 작성"
8,Spring 프로젝트 초기화,"Spring Boot 프로젝트 생성, 의존성 설정, 패키지 분리"
9,React 프로젝트 초기화,"React + TypeScript 세팅, Router 구성, 기본 페이지 및 컴포넌트 작성"
10,AI 모듈 기본 구축,"Python 환경 구성, 기본 추천 알고리즘 프로토타입 제작, Flask API 구성"
11,API 연동,프론트 ↔ 백엔드 ↔ AI 모듈 ↔ DB 간 요청/응답 흐름 구현 및 테스트
12,기능 테스트 및 디버깅,"예외 처리, 로깅, 에러 수정, UI 반응 테스트"
13,AWS EC2 서버 배포,"EC2 생성, 포트 열기, Oracle 설치 or RDS 연동, Spring JAR 배포, React build 배포, Flask 서버 연동"
14,최종 테스트 및 개선,"반응형 웹, 엣지 케이스 테스트, 데이터 예외, 시나리오 재확인"
15,시연 및 실사용,"테스트 유저에게 시연, 피드백 반영, 실사용 준비"
